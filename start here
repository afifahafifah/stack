#include <iostream>
#define MAX_STACK_SIZE 10

using namespace std;

struct Element{
	int data, top;
	Element *next;
};
	
	Element stack;
	Element *head = NULL;
  
class myStack{
	public:
	void setawal(){
		stack.top = 9;
	}
	
	bool isEmpty(){
        if(stack.top == 9){
			return 1;
		   }else{
			return 0;
		}
         }
  	bool isFull(){
        if(stack.top == 9){
			return 1;
		}else{
			return 0;
		}
         }
    
    void push(int input){
		if(isFull()){
			cout << "stack full";
		}else{
			Element *tmp = new Element;
			tmp->data = input;
			tmp->next=NULL;
			if(isEmpty())
			{
				head=tmp;
				head->next=NULL;
			}else{
				tmp->next=head;
				head=tmp;
			}
			cout<<"Push berhasil \n";
			stack.top++;
		}
	}
	
	void pop(){
		if (isEmpty()){
			cout<<"\nstack empty\n";
		}else{
			Element *tmp = new Element;
			tmp = head;
			head = head->next;
			delete tmp;
			cout<<"\nPop Berhasil\n";
			stack.top--;
		}	
	}
		
	void getTop(){
		if(isEmpty()){
			cout << "stuck empty";
		}else{
			cout << head->data;
		}
	}
	void print(){
		if(isEmpty()){
			cout << "stack empty" << endl;
		}else{
			cout << "Isi stuck : " << endl;
			Element *tmp = new Element;
			tmp = head;
			while(tmp!=NULL)
			{
				cout<<tmp->data<<"  ";
				tmp=tmp->next;
			}}}};

int nama_menu();

int main(){
	myStack obj;
	int menu,val;
	obj.setawal();
	do{
		menu = nama_menu();
		switch(menu){
			case 1:
					cout << "Input Angka yang ingin dipush: ";cin>>val;
					obj.push(val);
					break;
			case 2:
					if(obj.isEmpty()){
						cout << "stack empty" << endl;
					}else{
						cout << "Angka ";obj.getTop(); 
						cout << "akan dihapus";obj.pop();
					}
					break;
			case 3:
					if(obj.isEmpty()){
						cout << "stack empty" << endl;
					}else{
						cout << "Elemen Paling Atas adalah ";obj.getTop();
					}
					break;
			case 4:
					obj.print();
					break;
			case 5:
					exit(0);
			default:
					cout <<"\t\nPilihan tidak ada";
					break;
		}
		system("clear");
	}while (menu != 5);
		
		return 0;
}

int nama_menu(){
	cout<<"\n-----------------------------------------------------------";
    cout<<"\n\t\tSTACK USING LINKED LIST\n\n";
	int menu;
	cout<<"1:PUSH\n2:POP\n3:PEEK\n4:DISPLAY STACK\n5:EXIT";
    cout<<"\nPILIH: ";
    cin>>menu;
	
	system("clear");
	return menu;
}
